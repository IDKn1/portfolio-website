---
const { id, title = "YouTube video" } = Astro.props;
---

<div class="video-wrapper" data-video-id={id}>
  <div class="video-placeholder">
    <img
      src={`https://img.youtube.com/vi/${id}/maxresdefault.jpg`}
      alt={title}
      class="video-thumbnail"
      loading="lazy"
    />
    <button class="play-button" aria-label={`Play ${title}`}>
      <svg width="68" height="48" viewBox="0 0 68 48">
        <path
          d="M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z"
          fill="#f00"></path>
        <path d="M 45,24 27,14 27,34" fill="#fff"></path>
      </svg>
    </button>
  </div>
</div>

<style>
  .video-wrapper {
    aspect-ratio: 16 / 9;
    width: 100%;
    position: relative;
    background: #000;
    overflow: hidden;
    cursor: pointer;
  }

  .video-placeholder {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .video-thumbnail {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: none;
    border: none;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .play-button:hover {
    transform: translate(-50%, -50%) scale(1.1);
  }

  .video-wrapper iframe {
    width: 100%;
    height: 100%;
    border: 0;
  }
</style>

<script>
  function initializeVideoWrappers() {
    const videoWrappers = document.querySelectorAll(".video-wrapper");

    videoWrappers.forEach((wrapper) => {
      // Remove any existing listeners to prevent duplicates
      wrapper.replaceWith(wrapper.cloneNode(true));
    });

    // Re-select after cloning
    const newVideoWrappers = document.querySelectorAll(".video-wrapper");

    newVideoWrappers.forEach((wrapper) => {
      wrapper.addEventListener("click", function () {
        const videoId = this.dataset.videoId;
        const placeholder = this.querySelector(".video-placeholder");

        if (placeholder) {
          // Create iframe
          const iframe = document.createElement("iframe");
          iframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
          iframe.width = "100%";
          iframe.height = "100%";
          iframe.frameBorder = "0";
          iframe.allow =
            "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture";
          iframe.allowFullscreen = true;

          // Replace placeholder with iframe
          placeholder.style.display = "none";
          this.appendChild(iframe);
        }
      });
    });
  }

  // Initialize on page load
  document.addEventListener("DOMContentLoaded", initializeVideoWrappers);

  // Re-initialize on navigation (for client-side routing)
  document.addEventListener("astro:page-load", initializeVideoWrappers);
</script>
